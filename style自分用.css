/* ブラウザがそれぞれ持っているCSSをリセットするための記述 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: #6c6b6b;
}

a {
  text-decoration: none;
}

header {
  width: 90%; /* 横幅 */
  padding: 15px 0;
  margin: 0 auto;
  text-align: center;
}

header .heading {
  /* headerタグ内のheadingクラスにのみ反映される */
  font-size: 32px;
}

.nav-list {
  text-align: center;
  padding: 10px 0;
  margin: 0 auto;
}

.nav-list-item {
  list-style: none;
  display: inline-block;
  margin: 0 20px;
}

.main-visual {
  width: 100%; /* 横幅いっぱい */
  height: 300px; /* 高さ300px */
  background-image: url(img/mv.jpg);
  background-size: cover; /* 縦横比を維持したまま背景領域を埋め尽くす */
  background-position: center; /* 背景画像を中央に配置 */
}

.main-visual-content {
  width: 40%; /* 横幅40% */
  height: 300px; /* 親の高さに揃える */
  background-color: rgba(0, 0, 0, 0.5); /* 背景色を半透明の黒にする */
  text-align: center; /* 文字を中央揃えにする */
  /*
  質問<p>はブロック要素では？
  テキストの親要素に当たるのがpなのでここに入れるので正解。
  ブロック要素かそうでないかで使用するコマンドを分ける。
  */
  padding-top: 105px; /* 上側の内側余白で垂直方向の位置を調整 */
}

.main-visual-text {
  color: #fff; /* 文字色を白に変更 */
}

.main-visual-name {
  margin-top: 30px; /* 上側の外側の余白 */
  color: #fff; /* 文字色を白に変更 */
}
main {
  width: 800px; /* 横幅800px */
  display: flex; /* Flexboxの利用 */
  justify-content: center; /* 要素の横並び・中央寄せ */
  margin: 0 auto; /* 中央寄せ（左右に余白がないとできない） */
  padding: 70px 0; /*上下に70px，左右に0pxの内側余白*/
}

.blog {
  width: 540px;
  margin-right: 30px; /*領域の右側余白を作成して左にblogをずらす*/
}

.blog-heading {
  border-bottom: 8px solid #f7f7f7;
  /*widthを使用する場合は色を先に指定してあげてから使用
  そうでない場合は,この書き方で太さ・線の種類・色を指定できる。
  */
  text-align: center;
  /*質問:<div>はブロックライン要素では？*/
  line-height: 0.6;
  /* 
  フォントサイズに対し場合、領域の高さは0.6倍になり，並べられる。
  上下の中央にも来る。
  */

  /*
  質問：フォントサイズはどのように決まっている？
  →タグごとにある。
  */
}

.blog-box {
  padding-top: 50px;
}

.blog-item {
  padding-bottom: 20px;
  margin-bottom: 20px;
  border-bottom: 1px solid #f7f7f7;
  /*
  質問：-widthは不要？
  →先に色を指定した場合はこれを使う。この書き方でも指定できる
  */
  display: flex;
  justify-content: flex-start;
}

.category {
  display: inline-block;
  padding: 5px 8px;
  background-color: #acabab;
  border-radius: 3px;
  /*border-radiusは、領域の四辺の角を丸くしたいときに使う*/
  color: #fff;
  font-size: 11px;
}

.blog-image {
  height: 180px;
}

.blog-text {
  padding: 25px 0 0 30px;
}

.blog-text-heading {
  padding-bottom: 15px;
}

.blog-date {
  font-size: 12px;
  display: inline-block;
}

.sidebar {
  width: 230px;
}

footer {
  width: 100%;
  height: 120px;
  text-align: center;
  /*
  質問:footer-textはブロック要素では？
  →
  */
  line-height: 120px; /*上下の中央揃え。要素の高さと同じ値を入れる*/
  background-color: #848282;
}

.footer-text {
  color: #fff;
}
